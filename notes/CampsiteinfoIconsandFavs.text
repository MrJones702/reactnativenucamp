import React, {Component} from 'react';
import { Text, View, ScrollView, FlatList} from 'react-native';
import { Card } from 'react-native-elements';
import {CAMPSITES} from '../shared/campsites';
import {COMMENTS} from '../shared/comments';

function RenderComments({comments}) {
    const renderCommentItem= ({item}) => {
        return (
            <View style={{margin:10}}>
                <Text style={{frontSize: 14}}>{item.text}</Text>
                <Text style={{frontSize: 12}}>{item.rating} Stars</Text>
                <Text style={{frontSize: 12}}>{`--${item.author}, ${item.date}`}</Text>
            </View>
        );
    };
    return(
        <Card title='Comments'>
            <FlatList
                data={comments}
                renderItem={renderCommentItem}
                keyExtractor={item=> item.id.toString()}
            />
        </Card>
    );
}

function RenderCampsite({campsite}) {
    if (campsite) {
        return (
            <Card 
                featuredTitle={campsite.name}
                image={require('./images/react-lake.jpg')}
            >
                <Text style={{margin: 10}}>
                    {campsite.description}
                </Text>
            </Card>
        );
    }
    return <View />;
}

class CampsiteInfo extends Component {
    constructor(props){
        super(props);
        this.state= {
            campsites: CAMPSITES,
            comments: COMMENTS
        };
    }

    static navigationOptions={
        title: 'Campsite Information'
    }

    render() {
        const campsiteId = this.props.navigation.getParam('campsiteId');
        const campsite = this.state.campsites.filter(campsite=> campsite.id === campsiteId)[0];
        const comments= this.state.comments.filter(comment => comment.campsiteId === campsiteId);
        return(
            <ScrollView>
                <RenderCampsite campsite={campsite} />
                <RenderComments comments={comments} />
            </ScrollView>
        );
    }
}

export default CampsiteInfo;

NOTES!!!!!!!!!!
 60) comments variable and filtering out all of the comments that have a campsiteId property that matches the campsiteId that were trying to display

 64) rendering RenderComments and passing it the comments array that we just filterd out in line 60

 7) creating the RenderComments component.. as a functional component.. 
    it gets the comments array as a property of the props object..
    17-18) returning a card component with the title Comments. 
    19-23) comments are in an array  so it's a perfect oppurtunity to use FlatList which expects its data in the form of an array line. 19) for its data we gave it the comments array for the renderItem wwe gave it the function that we made on lines 8-16.. and we destructure the item prop out... which it automatically gets since its a function inside a function... bcuz all the items have a unique ID we set the keyExtractor to use that id for the unique key... 
    8-16) we set up the function mentioned above... returning a few lines of text... put inside a view since the return should hold one <elemnent> but can have mulitple elements inside that one... dont forget we use double {{}} to style so the compiler doesnt think we are trying to use a variable... 
